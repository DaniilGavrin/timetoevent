name: Master CI/CD + Telegram

on:
  push:
    branches: [master, pro]
  pull_request:
    branches: [master, pro]
    types: [closed]

jobs:
  build-and-deploy:
    if: |
      github.event_name == 'push' || 
      (github.event.pull_request.merged == true && github.event_name == 'pull_request')
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.metadata.outputs.project_name }}
      version: ${{ steps.metadata.outputs.version }}
      apk_name: ${{ steps.metadata.outputs.apk_name }}
      apk_name_no_ext: ${{ steps.metadata.outputs.apk_name_no_ext }}
      commit_message: ${{ steps.metadata.outputs.commit_message }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  build-windows:
    if: |
      github.event_name == 'push' || 
      (github.event.pull_request.merged == true && github.event_name == 'pull_request')
    runs-on: windows-latest
    needs: build-and-deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'

    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop

    - name: Install dependencies
      run: flutter pub get

    - name: Build Windows
      run: |
        flutter clean
        flutter pub get
        flutter build windows --release
        cd build\windows\x64\runner\Release
        7z a -tzip ..\..\..\..\windows_app.zip *
        cd ..\..\..\..
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É build, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (-not (Test-Path -Path "build")) {
          New-Item -ItemType Directory -Path "build"
        }
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ apk_name_no_ext –Ω–µ –ø—É—Å—Ç–æ–π
        $apkNameNoExt = "${{ needs.build-and-deploy.outputs.apk_name_no_ext }}"
        if ([string]::IsNullOrWhiteSpace($apkNameNoExt)) {
          Write-Host "::error::apk_name_no_ext is empty. Using fallback name."
          $apkNameNoExt = "fallback_build_$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        # –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º
        Move-Item -Path "windows_app.zip" -Destination "build\windows_app_$apkNameNoExt.zip"
        Write-Host "Windows app successfully moved to build\windows_app_$apkNameNoExt.zip"

    - name: Upload Windows to Telegram
      env:
        BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        $apkNameNoExt = "${{ needs.build-and-deploy.outputs.apk_name_no_ext }}"
        if ([string]::IsNullOrWhiteSpace($apkNameNoExt)) {
          Write-Host "::error::apk_name_no_ext is empty. Using fallback name."
          $apkNameNoExt = "fallback_build_$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        
        $WINDOWS_PATH = "build\windows_app_$apkNameNoExt.zip"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
        if (-not (Test-Path -Path $WINDOWS_PATH)) {
          Write-Host "::error::File not found: $WINDOWS_PATH"
          Write-Host "Contents of build directory:"
          Get-ChildItem -Path "build"
          exit 1
        }
        
        # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
        $PROJECT_NAME = '${{ needs.build-and-deploy.outputs.project_name }}'.Replace(' ', '\ ').Replace('(', '\(').Replace(')', '\)').Replace('[', '\[').Replace(']', '\]').Replace('{', '\{').Replace('}', '\}').Replace('$', '\$').Replace('!', '\!')
        $VERSION = '${{ needs.build-and-deploy.outputs.version }}'.Replace(' ', '\ ').Replace('(', '\(').Replace(')', '\)').Replace('[', '\[').Replace(']', '\]').Replace('{', '\{').Replace('}', '\}').Replace('$', '\$').Replace('!', '\!')
        $COMMIT_MSG = '${{ needs.build-and-deploy.outputs.commit_message }}'.Replace('\n', '%0A').Replace(' ', '\ ').Replace('(', '\(').Replace(')', '\)').Replace('[', '\[').Replace(']', '\]').Replace('{', '\{').Replace('}', '\}').Replace('$', '\$').Replace('!', '\!')
        $WINDOWS_FILENAME = "windows_app_$apkNameNoExt.zip".Replace(' ', '\ ').Replace('(', '\(').Replace(')', '\)').Replace('[', '\[').Replace(']', '\]').Replace('{', '\{').Replace('}', '\}').Replace('$', '\$').Replace('!', '\!')
        
        $MESSAGE = "üöÄ *–ù–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ Windows\!*%0A%0Aüì¶ –ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME%0Aüîñ –í–µ—Ä—Å–∏—è: $VERSION%0Aüìù –ö–æ–º–º–∏—Ç: `$COMMIT_MSG`%0AüìÅ –§–∞–π–ª: `$WINDOWS_FILENAME`"

        curl -F "document=@$WINDOWS_PATH" "https://api.telegram.org/bot${{ env.BOT_TOKEN }}/sendDocument?chat_id=${{ env.CHAT_ID }}"
        curl -s -X POST "https://api.telegram.org/bot${{ env.BOT_TOKEN }}/sendMessage" `
          -d "chat_id=${{ env.CHAT_ID }}" `
          -d "text=$MESSAGE" `
          -d "parse_mode=MarkdownV2"