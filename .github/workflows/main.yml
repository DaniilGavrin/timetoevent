name: Master CI/CD + Telegram

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [closed]

jobs:
  build-and-deploy:
    if: |
      github.event_name == 'push' || 
      (github.event.pull_request.merged == true && github.event_name == 'pull_request')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # –ü–æ–ª–Ω—ã–π history –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–æ–≤

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'

    - name: Install dependencies
      run: flutter pub get

    - name: Generate metadata
      id: metadata
      run: |
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ pubspec.yaml
        PROJECT_NAME=$(grep '^name:' pubspec.yaml | awk -F': ' '{print $2}' | tr -d '\r' | tr -d '"')
        VERSION=$(grep '^version:' pubspec.yaml | awk -F': ' '{print $2}' | cut -d'+' -f1 | tr -d '\r')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ö—ç—à –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞
        COMMIT_HASH=$(git rev-parse --short HEAD)
        COMMIT_MESSAGE=$(git log -1 --pretty=%B | tr -d '\r')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞
        TIMESTAMP=$(date +"%Y%m%d-%H%M")
        if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
          IDENTIFIER="pr${GITHUB_EVENT_NUMBER}"
        else
          IDENTIFIER="build${GITHUB_RUN_NUMBER}"
        fi
        
        APK_NAME="${PROJECT_NAME}_v${VERSION}_${IDENTIFIER}_${TIMESTAMP}_${COMMIT_HASH}.apk"
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–ø–∏—Å—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ output (–≤–∫–ª—é—á–∞—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç)
        {
          echo "project_name=$PROJECT_NAME"
          echo "version=$VERSION"
          echo "apk_name=$APK_NAME"
          echo "commit_message<<EOF"
          echo "$COMMIT_MESSAGE"
          echo "EOF"
        } >> "$GITHUB_OUTPUT"

    - name: Build APK
      run: |
        flutter build apk --release --no-tree-shake-icons
        mv build/app/outputs/apk/release/app-release.apk build/app/outputs/apk/release/${{ steps.metadata.outputs.apk_name }}

    - name: Upload APK to Telegram
      env:
        BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        APK_PATH="build/app/outputs/apk/release/${{ steps.metadata.outputs.apk_name }}"

        # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
        PROJECT_NAME=$(echo '${{ steps.metadata.outputs.project_name }}' | sed -e 's/[_.*()>#+-=|{}$!]/\\&/g')
        VERSION=$(echo '${{ steps.metadata.outputs.version }}' | sed -e 's/[_.*()>#+-=|{}$!]/\\&/g')
        COMMIT_MSG=$(echo '${{ steps.metadata.outputs.commit_message }}' | sed -e 's/[_.*()>#+-=|{}$!]/\\&/g' -e ':a;N;$!ba;s/\n/%0A/g')
        APK_FILENAME=$(echo '${{ steps.metadata.outputs.apk_name }}' | sed -e 's/[_.*()>#+-=|{}$!]/\\&/g')

        # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        MESSAGE="üöÄ *–ù–æ–≤–∞—è —Å–±–æ—Ä–∫–∞\\!*%0A%0Aüì¶ –ü—Ä–æ–µ–∫—Ç: ${PROJECT_NAME}%0Aüîñ –í–µ—Ä—Å–∏—è: ${VERSION}%0Aüìù –ö–æ–º–º–∏—Ç: \`${COMMIT_MSG}\`%0AüìÅ –§–∞–π–ª: \`${APK_FILENAME}\`"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ APK
        curl -F document=@"$APK_PATH" "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument?chat_id=${CHAT_ID}"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
          -d chat_id="${CHAT_ID}" \
          -d text="${MESSAGE}" \
          -d parse_mode="MarkdownV2"
